{
  "pipelineConfig" : {
    "schemaVersion" : 1,
    "version" : 4,
    "uuid" : "ea2624ea-1238-4e56-9a6b-0627328e62c0",
    "description" : "",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "memoryLimit",
      "value" : "${jvm:maxMemoryMB() * 0.65}"
    }, {
      "name" : "memoryLimitExceeded",
      "value" : "STOP_PIPELINE"
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 1024
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:PermSize=128M -XX:MaxPermSize=256M -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 10000,
        "writeToDestinations" : false,
        "showHeader" : false,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "stages" : [ {
      "instanceName" : "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource_1",
      "library" : "streamsets-datacollector-apache-kafka_0_9-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource",
      "stageVersion" : "4",
      "configuration" : [ {
        "name" : "kafkaConfigBean.dataFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.removeCtrlChars",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.filePatternInArchive",
        "value" : "*"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.textMaxLineLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.jsonContent",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.jsonMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvSkipStartLines",
        "value" : 0
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.xmlRecordElement",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.xmlMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.logMode",
        "value" : "COMMON_LOG_FORMAT"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.logMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.retainOriginalLine",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.customLogFormat",
        "value" : "%h %l %u %t \"%r\" %>s %b"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.regex",
        "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.fieldPathsToGroupName",
        "value" : [ {
          "fieldPath" : "/",
          "group" : 1
        } ]
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.grokPatternDefinition",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.grokPattern",
        "value" : "%{COMMONAPACHELOG}"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.onParseError",
        "value" : "ERROR"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.maxStackTraceLines",
        "value" : 50
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.enableLog4jCustomLogFormat",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.log4jCustomLogFormat",
        "value" : "%r [%t] %-5p %c %x - %m%n"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.schemaInMessage",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.isDelimited",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.binaryMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormat",
        "value" : "SDC_JSON"
      }, {
        "name" : "kafkaConfigBean.metadataBrokerList",
        "value" : "147.75.195.213:9092"
      }, {
        "name" : "kafkaConfigBean.zookeeperConnect",
        "value" : "147.75.195.213:2181"
      }, {
        "name" : "kafkaConfigBean.consumerGroup",
        "value" : "streamsetsDataCollector12"
      }, {
        "name" : "kafkaConfigBean.topic",
        "value" : "TestRun1"
      }, {
        "name" : "kafkaConfigBean.produceSingleRecordPerMessage",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.maxBatchSize",
        "value" : 1000
      }, {
        "name" : "kafkaConfigBean.maxWaitTime",
        "value" : 2000
      }, {
        "name" : "kafkaConfigBean.kafkaConsumerConfigs",
        "value" : [ ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "yPos" : 175.33032989501953,
        "rawSource" : {
          "configuration" : [ {
            "name" : "brokerHost",
            "value" : "localhost"
          }, {
            "name" : "brokerPort",
            "value" : 9092
          }, {
            "name" : "topic",
            "value" : "myTopic"
          }, {
            "name" : "partition",
            "value" : 0
          }, {
            "name" : "maxWaitTime",
            "value" : 1000
          } ]
        },
        "xPos" : -53.35126495361328,
        "description" : "",
        "stageType" : "SOURCE",
        "label" : "Kafka Consumer 1"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource_1OutputLane14533167870640" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor_1",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "fieldTypeConverterConfigs",
        "value" : [ {
          "fields" : [ "/card_number" ],
          "targetType" : "STRING",
          "dataLocale" : "en,US",
          "dateFormat" : "YYYY_MM_DD"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 178.55157470703125,
        "xPos" : 175.086669921875,
        "description" : "",
        "stageType" : "PROCESSOR",
        "label" : "Field Converter 1"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource_1OutputLane14533167870640" ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor_1OutputLane14533261029760" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_processor_jython_JythonDProcessor_1",
      "library" : "streamsets-datacollector-jython_2_7-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_jython_JythonDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "processingMode",
        "value" : "BATCH"
      }, {
        "name" : "script",
        "value" : "#\n# Sample Jython code\n#\n# Available Objects:\n# \n#  records: an array of records to process, depending on Jython processor\n#           processing mode it may have 1 record or all the records in the batch.\n#\n#  state: a dict that is preserved between invocations of this script. \n#         Useful for caching bits of data e.g. counters.\n#\n#  log.<loglevel>(msg, obj...): use instead of print to send log messages to the log4j log instead of stdout.\n#                               loglevel is any log4j level: e.g. info, error, warn, trace.\n#\n#  output.write(record): writes a record to processor output\n#\n#  error.write(record, message): sends a record to error\n#\n# Add additional module search paths:\n#import sys\n#sys.path.append('/some/other/dir/to/search')\n\nfor record in records:\n  try:\n    cc = record.value['card_number']\n    if cc == '':\n      error.write(record, \"Payment type was CRD, but credit card was null\")\n      continue\n\n    cc_type = ''\n    if cc.startswith('4'):\n      cc_type = 'Visa'\n    elif cc.startswith(('51','52','53','54','55')):\n      cc_type = 'MasterCard'\n    elif cc.startswith(('34','37')):\n      cc_type = 'AMEX'\n    elif cc.startswith(('300','301','302','303','304','305','36','38')):\n      cc_type = 'Diners Club'\n    elif cc.startswith(('6011','65')):\n      cc_type = 'Discover'\n    elif cc.startswith(('2131','1800','35')):\n      cc_type = 'JCB'\n    else:\n      cc_type = 'Other'\n\n    record.value['credit_card_type'] = cc_type\n    output.write(record)\n\n  except Exception as e:\n    # Send record to error\n    error.write(record, str(e))\n"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 178.5545654296875,
        "xPos" : 406.94171142578125,
        "description" : "",
        "stageType" : "PROCESSOR",
        "label" : "Jython Evaluator 1"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor_1OutputLane14533261029760" ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_processor_jython_JythonDProcessor_1OutputLane14533270816900" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor_1",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "fieldMaskConfigs",
        "value" : [ {
          "fields" : [ "/card_number" ],
          "maskType" : "CUSTOM",
          "regex" : "(.*)([0-9]{4})",
          "groupsToShow" : "2",
          "mask" : "************####"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 177.24514770507812,
        "xPos" : 641.39013671875,
        "description" : "",
        "stageType" : "PROCESSOR",
        "label" : "Field Masker 1"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_jython_JythonDProcessor_1OutputLane14533270816900" ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor_1OutputLane14533189603410" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_destination_localfilesystem_LocalFileSystemDTarget_1",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_localfilesystem_LocalFileSystemDTarget",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "configs.uniquePrefix",
        "value" : "avro-out"
      }, {
        "name" : "configs.dirPathTemplate",
        "value" : "/home/kirit/avro/out/"
      }, {
        "name" : "configs.timeZoneID",
        "value" : "UTC"
      }, {
        "name" : "configs.timeDriver",
        "value" : "${time:now()}"
      }, {
        "name" : "configs.maxRecordsPerFile",
        "value" : 0
      }, {
        "name" : "configs.maxFileSize",
        "value" : 0
      }, {
        "name" : "configs.compression",
        "value" : "NONE"
      }, {
        "name" : "configs.otherCompression",
        "value" : null
      }, {
        "name" : "configs.keyEl",
        "value" : "${uuid()}"
      }, {
        "name" : "configs.lateRecordsLimit",
        "value" : "${1 * HOURS}"
      }, {
        "name" : "configs.lateRecordsAction",
        "value" : "SEND_TO_ERROR"
      }, {
        "name" : "configs.lateRecordsDirPathTemplate",
        "value" : "/tmp/late/${YYYY()}-${MM()}-${DD()}"
      }, {
        "name" : "configs.dataFormat",
        "value" : "AVRO"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "configs.dataGeneratorFormatConfig.jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.textFieldPath",
        "value" : "/"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "configs.dataGeneratorFormatConfig.avroSchema",
        "value" : "{\"namespace\" : \"cctest.avro\",\n \"type\": \"record\",\n \"name\": \"CCTest\",\n \"doc\": \"Test Credit Card Transactions\",\n \"fields\": [\n            {\"name\": \"transaction_date\", \"type\": \"string\"},\n            {\"name\": \"card_number\", \"type\": \"string\"},\n            {\"name\": \"card_expiry_date\", \"type\": \"string\"},\n            {\"name\": \"card_security_code\", \"type\": \"string\"},\n            {\"name\": \"purchase_amount\", \"type\": \"string\"},\n            {\"name\": \"description\", \"type\": \"string\"}\n           ]\n}"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.avroCompression",
        "value" : "NULL"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.binaryFieldPath",
        "value" : "/"
      }, {
        "name" : "configs.dataGeneratorFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "configs.dataGeneratorFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 283.3691711425781,
        "xPos" : 980.40966796875,
        "description" : "",
        "stageType" : "TARGET",
        "label" : "Local FS 1"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor_1OutputLane14533189603410" ],
      "outputLanes" : [ ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget_1",
      "library" : "streamsets-datacollector-elasticsearch_1_7-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "clusterName",
        "value" : "elasticsearch"
      }, {
        "name" : "uris",
        "value" : [ "localhost:9300" ]
      }, {
        "name" : "configs",
        "value" : [ {
          "key" : "client.transport.sniff",
          "value" : "true"
        } ]
      }, {
        "name" : "timeDriver",
        "value" : "${time:now()}"
      }, {
        "name" : "timeZoneID",
        "value" : "UTC"
      }, {
        "name" : "indexTemplate",
        "value" : "cclogs"
      }, {
        "name" : "typeTemplate",
        "value" : "cclogs"
      }, {
        "name" : "docIdTemplate",
        "value" : null
      }, {
        "name" : "charset",
        "value" : "UTF-8"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 74,
        "xPos" : 986.40966796875,
        "description" : "",
        "stageType" : "TARGET",
        "label" : "Elasticsearch 1"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor_1OutputLane14533189603410" ],
      "outputLanes" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget_ErrorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "yPos" : 50,
        "xPos" : 500,
        "description" : "",
        "stageType" : "TARGET",
        "label" : "Bad Records - Discard"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ]
    },
    "info" : {
      "name" : "KafkaConsumer_to_MultipleDestinations",
      "description" : "",
      "created" : 1453316776798,
      "lastModified" : 1453332185987,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "ea2624ea-1238-4e56-9a6b-0627328e62c0",
      "valid" : true
    },
    "previewable" : true,
    "valid" : true,
    "issues" : {
      "issueCount" : 0,
      "pipelineIssues" : [ ],
      "stageIssues" : { }
    }
  },
  "pipelineRules" : {
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Bad Records",
      "metricId" : "pipeline.batchErrorRecords.meter",
      "metricType" : "METER",
      "metricElement" : "METER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Error Messages",
      "metricId" : "pipeline.batchErrorMessages.meter",
      "metricType" : "METER",
      "metricElement" : "METER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    }, {
      "id" : "memoryLimitAlertID",
      "alertText" : "Memory limit for pipeline exceeded",
      "metricId" : "pipeline.memoryConsumed.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > (jvm:maxMemoryMB() * 0.65)}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "emailIds" : [ ],
    "uuid" : "22370032-f6f0-4bb3-bca0-554a7caa66c5",
    "ruleIssues" : [ ]
  }
}
